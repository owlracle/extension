import gasTimer from"./gas.min.js";import chart from"./chart.min.js";import api from"./api.min.js";import{login,menu,Dropdown,network,advisor,messageBus,ModalWindow}from"./utils.min.js";document.addEventListener("DOMContentLoaded",async()=>{menu.init(),gasTimer.init(),chart.init(),advisorDOM.init();const networkSwitcher={element:document.querySelector("#network-btn"),bound:!1,reload:function(){this.bound||(this.bound=!0,this.bindClick(),this.element.classList.remove("hidden")),document.querySelector("#header #link").href=`https://owlracle.info/${network.get().symbol}`,this.element.removeAttribute("class"),this.element.classList.add(network.get().symbol),this.element.querySelector("img").src=`https://owlracle.info/img/${network.get().symbol}.png`,this.element.querySelector("span").innerHTML=network.get().name,"gas"==menu.getActive()&&gasTimer.update(),"chart"==menu.getActive()&&chart.timeframeSwitch()},get:function(){return this.element},bindClick:function(){new Dropdown({button:this.element,itemList:Object.values(network.getList()).map(e=>({id:e.symbol,innerHTML:`<img class="icon" src="${e.icon.src}" alt="${e.name} icon"><span class="name">${e.name}</span>`})),clickFn:e=>{network.set(e.id),this.reload()}})}};menu.setClick("gas",()=>networkSwitcher.reload()),menu.setClick("chart",()=>networkSwitcher.reload()),menu.setClick("key",()=>api.check()),login.get("apikey")&&login.refresh();let menuOpt=null;login.get("logged")||(menuOpt="key"),menu.click(menuOpt),messageBus.watch(),messageBus.addEvent("network",message=>{if(!message.message.network)return document.querySelector("#content #advisor #network-container #network").innerHTML='<b class="red">Unsupported network</b>',advisor.network=!1,advisorDOM.setCost(),!1;const ntw=network.get(message.message.network);return document.querySelector("#content #advisor #network-container #network").innerHTML=`<img src="https://owlracle.info/img/${ntw.symbol}.png"><span>${ntw.name}</span>`,advisor.network=ntw,advisorDOM.setCost(),!0})});const advisorDOM={init:async function(){const adv=await advisor.get(),container=document.querySelector("#content #advisor");container.innerHTML=`<div id="content" class="logged">\n            <h2>Tx advisor</h2>\n            <div id="metamask-connected">\n                <img src="img/metamask-fox.svg" id="metamask-icon">\n                <div id="network-container">\n                    <span>Metamask connected to</span>\n                    <div id="network"></div>\n                </div>\n            </div>\n            <div id="enable-container">\n                <label><input id="allow" type="checkbox" class="checkbox" ${adv.enabled?"checked":""}>Allow me to submit gas price suggestions into your Metamask transaction</label>\n                <div id="cost-card">\n                    <div class="title"><span>Advice cost<i id="cost-help" class="fa-regular fa-circle-question"></i></span></div>\n                    <div class="body">\n                        <span class="value"></span>\n                        <span class="info">/ submitted tx</span>\n                    </div>\n                </div>\n            </div>\n        </div>`,container.querySelector("#allow").addEventListener("change",(function(){advisor.set({enabled:this.checked}).then(()=>{advisorDOM.setCost()})})),container.querySelector("#cost-help").addEventListener("click",()=>{new ModalWindow({title:"Advisor costs help",message:`\n                    <p>This action will deduct credit from your API account. But since our advice is awesome ðŸ¦‰, it will always be worth it.</p>\n\n                    <span>Cost:</span>\n                    <ul>\n                        <li><b>${(100*this.fee).toFixed(0)}%</b> of the predicted network fee.</li>\n                        <li>Maximum value: <b><code>$${this.maxFee}</code></b></li>\n                    </ul>\n\n                    <p>In most cases, the advisor saves you more than it costs. On the rare occasions it doesn't, it will prevent your transaction from being stuck in a congested network.</p>\n                `})}),messageBus.send("get-network",{},message=>{if(!message)return container.querySelector("#network-container #network").innerHTML='<b class="red">Unsupported network</b>',advisor.network=!1,this.setCost(),!1;const ntw=network.get(message);return container.querySelector("#network-container #network").innerHTML=`<img src="https://owlracle.info/img/${ntw.symbol}.png"><span>${ntw.name}</span>`,advisor.network=ntw,this.setCost(),!0})},setCost:async function(){const container=document.querySelector("#content #advisor"),card=container.querySelector("#cost-card"),valueBox=card.querySelector(".value");card.classList.remove("disabled");const advisorEnabled=(await advisor.get("enabled")).enabled;if(!advisor.network||!advisorEnabled)return card.classList.add("disabled"),void(valueBox.innerHTML="N/A");const query={source:"extension",apikey:login.get().apikey,accept:advisor.speed},data=await(await fetch(`https://owlracle.info/${advisor.network.symbol}/gas?${new URLSearchParams(query).toString()}`)).json(),value=Math.min(advisor.maxFee,data.speeds[0].estimatedFee*advisor.fee).toFixed(4);valueBox.innerHTML=`$${value}`}};
//# sourceMappingURL=popup.min.js.map